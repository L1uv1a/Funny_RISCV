$date
	Tue Aug  6 14:13:56 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module decode_tb $end
$var wire 1 ! flush_decode $end
$var wire 1 " stall_decode $end
$var wire 1 # stall_fetch $end
$var wire 1 $ wb_stall $end
$var wire 32 % wb_rd_data [31:0] $end
$var wire 1 & wb_ack $end
$var wire 1 ' main_memory_instr_req $end
$var wire 32 ( main_memory_instr_addr [31:0] $end
$var wire 1 ) main_memory_instr_ack $end
$var wire 32 * main_memory_instr [31:0] $end
$var wire 32 + fetch_pc [31:0] $end
$var wire 32 , fetch_instr [31:0] $end
$var wire 1 - execute_clk_en $end
$var wire 1 . decode_stall $end
$var wire 5 / decode_rs2 [4:0] $end
$var wire 5 0 decode_rs1 [4:0] $end
$var wire 5 1 decode_r_rs2 [4:0] $end
$var wire 5 2 decode_r_rs1 [4:0] $end
$var wire 5 3 decode_r_rd [4:0] $end
$var wire 32 4 decode_pc [31:0] $end
$var wire 11 5 decode_opcode_type [10:0] $end
$var wire 32 6 decode_imm [31:0] $end
$var wire 3 7 decode_funct3 [2:0] $end
$var wire 1 8 decode_flush $end
$var wire 4 9 decode_exception [3:0] $end
$var wire 1 : decode_clk_en $end
$var wire 14 ; decode_alu_type [13:0] $end
$var parameter 32 < ADDR_WIDTH $end
$var parameter 32 = CLK_PERIOD $end
$var parameter 32 > CLK_PERIOD_HALF $end
$var parameter 32 ? CLK_PERIOD_QUAR $end
$var parameter 64 @ MEMORY_BYTES $end
$var parameter 64 A MEMORY_DEPTH $end
$var parameter 0 B MEMORY_HEX $end
$var parameter 32 C PC_RESET $end
$var parameter 32 D TEST_INSTRUCTION $end
$var reg 1 E clk $end
$var reg 1 F execute_change_pc $end
$var reg 32 G execute_next_pc [31:0] $end
$var reg 1 H rst $end
$var reg 32 I wb_addr [31:0] $end
$var reg 1 J wb_cyc $end
$var reg 1 K wb_stb $end
$var reg 32 L wb_wr_data [31:0] $end
$var reg 1 M wb_wr_en $end
$var reg 4 N wb_wr_sel [3:0] $end
$var reg 1 O writeback_change_pc $end
$var reg 32 P writeback_next_pc [31:0] $end
$var integer 32 Q errors [31:0] $end
$var integer 32 R totals [31:0] $end
$scope function get_alu_type $end
$var reg 14 S decode_alu_type [13:0] $end
$var reg 3 T decode_funct3 [2:0] $end
$upscope $end
$scope function get_decode_info $end
$upscope $end
$scope function get_opcode_type $end
$var reg 11 U decode_opcode_type [10:0] $end
$var integer 32 V number_of_bit_1 [31:0] $end
$scope begin $ivl_for_loop1 $end
$var integer 32 W check_bit [31:0] $end
$upscope $end
$upscope $end
$scope module decode_inst $end
$var wire 1 E clk $end
$var wire 5 X decode_rs1 [4:0] $end
$var wire 5 Y decode_rs2 [4:0] $end
$var wire 1 ! flush $end
$var wire 1 Z illegal_shift $end
$var wire 1 H rst $end
$var wire 1 " stall $end
$var wire 1 [ stall_bit $end
$var wire 1 \ system_noncsr $end
$var wire 1 ] valid_opcode $end
$var wire 5 ^ rs2 [4:0] $end
$var wire 5 _ rs1 [4:0] $end
$var wire 5 ` rd [4:0] $end
$var wire 1 a opcode_system $end
$var wire 1 b opcode_store $end
$var wire 1 c opcode_rtype $end
$var wire 1 d opcode_lui $end
$var wire 1 e opcode_load $end
$var wire 1 f opcode_jalr $end
$var wire 1 g opcode_jal $end
$var wire 1 h opcode_itype $end
$var wire 1 i opcode_fence $end
$var wire 1 j opcode_branch $end
$var wire 1 k opcode_auipc $end
$var wire 7 l opcode [6:0] $end
$var wire 32 m imm_x [31:0] $end
$var wire 32 n imm_u [31:0] $end
$var wire 1 o imm_sign_bit $end
$var wire 32 p imm_s [31:0] $end
$var wire 32 q imm_j [31:0] $end
$var wire 32 r imm_i [31:0] $end
$var wire 32 s imm_b [31:0] $end
$var wire 1 t funct7_bit6 $end
$var wire 3 u funct3 [2:0] $end
$var wire 32 v fetch_pc [31:0] $end
$var wire 32 w fetch_instr [31:0] $end
$var wire 1 : clk_en $end
$var reg 1 x alu_add $end
$var reg 1 y alu_and $end
$var reg 1 z alu_eq $end
$var reg 1 { alu_ge $end
$var reg 1 | alu_geu $end
$var reg 1 } alu_neq $end
$var reg 1 ~ alu_or $end
$var reg 1 !" alu_sll $end
$var reg 1 "" alu_slt $end
$var reg 1 #" alu_sltu $end
$var reg 1 $" alu_sra $end
$var reg 1 %" alu_srl $end
$var reg 1 &" alu_sub $end
$var reg 1 '" alu_xor $end
$var reg 14 (" decode_alu_type [13:0] $end
$var reg 4 )" decode_exception [3:0] $end
$var reg 3 *" decode_funct3 [2:0] $end
$var reg 32 +" decode_imm [31:0] $end
$var reg 11 ," decode_opcode_type [10:0] $end
$var reg 32 -" decode_pc [31:0] $end
$var reg 5 ." decode_r_rd [4:0] $end
$var reg 5 /" decode_r_rs1 [4:0] $end
$var reg 5 0" decode_r_rs2 [4:0] $end
$var reg 32 1" imm [31:0] $end
$var reg 1 - next_clk_en $end
$var reg 1 8 next_flush $end
$var reg 1 . next_stall $end
$scope begin alu_operation_decode $end
$upscope $end
$scope begin imm_decode $end
$upscope $end
$scope begin update_pipeline_control $end
$upscope $end
$scope begin update_stage_registers $end
$upscope $end
$scope begin update_stages_cotrol $end
$upscope $end
$upscope $end
$scope module fetch_inst $end
$var wire 1 2" change_pc $end
$var wire 1 E clk $end
$var wire 1 3" disable_next_stage $end
$var wire 1 4" enable_update_registers $end
$var wire 1 F execute_change_pc $end
$var wire 32 5" execute_next_pc [31:0] $end
$var wire 1 8 flush $end
$var wire 1 ' main_memory_instr_req $end
$var wire 1 H rst $end
$var wire 1 # stall $end
$var wire 1 6" stall_bit $end
$var wire 1 O writeback_change_pc $end
$var wire 32 7" writeback_next_pc [31:0] $end
$var wire 1 ) main_memory_instr_ack $end
$var wire 32 8" main_memory_instr [31:0] $end
$var parameter 32 9" PC_RESET $end
$var reg 32 :" fetch_instr [31:0] $end
$var reg 32 ;" main_memory_instr_addr [31:0] $end
$var reg 1 : next_clk_en $end
$var reg 32 <" pc [31:0] $end
$var reg 32 =" prev_pc [31:0] $end
$var reg 1 >" r_clk_en $end
$var reg 1 ?" r_clk_en_d $end
$var reg 32 @" r_main_memory_instr_addr [31:0] $end
$var reg 1 A" r_stall $end
$var reg 32 B" stalled_instr [31:0] $end
$var reg 32 C" stalled_pc [31:0] $end
$upscope $end
$scope module main_memory_inst $end
$var wire 1 E clk $end
$var wire 12 D" instr_addr [11:0] $end
$var wire 1 ' instr_stb $end
$var wire 12 E" wb_addr [11:0] $end
$var wire 1 J wb_cyc $end
$var wire 1 $ wb_stall $end
$var wire 1 K wb_stb $end
$var wire 32 F" wb_wr_data [31:0] $end
$var wire 1 M wb_wr_en $end
$var wire 4 G" wb_wr_sel [3:0] $end
$var parameter 32 H" ADDR_WIDTH $end
$var parameter 64 I" MEMORY_BYTES $end
$var parameter 64 J" MEMORY_DEPTH $end
$var parameter 0 K" MEMORY_HEX $end
$var reg 32 L" instr [31:0] $end
$var reg 1 ) instr_ack $end
$var reg 1 & wb_ack $end
$var reg 32 M" wb_rd_data [31:0] $end
$scope begin sync_read_process $end
$upscope $end
$scope begin sync_write_process $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 N" i [31:0] $end
$upscope $end
$scope task instruction_decode $end
$upscope $end
$scope task instruction_fetch $end
$upscope $end
$scope task reset $end
$upscope $end
$scope task test_decode $end
$upscope $end
$scope task test_execute_change_pc $end
$upscope $end
$scope task test_writeback_change_pc $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b K"
b10000000000 J"
b1000000000000 I"
b1100 H"
b0 9"
b1001011000000000000100010011 D
b0 C
b B
b10000000000 A
b1000000000000 @
b10 ?
b101 >
b1010 =
b1100 <
$end
#0
$dumpvars
b10000000000 N"
b0 M"
b0 L"
b0 G"
b0 F"
b0 E"
b0 D"
b0 C"
b0 B"
0A"
b100 @"
0?"
0>"
b0 ="
b0 <"
b0 ;"
b0 :"
b0 8"
b0 7"
16"
b0 5"
04"
03"
02"
b0 1"
b0 0"
b0 /"
b0 ."
b0 -"
b0 ,"
b0 +"
b0 *"
b0 )"
b0 ("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
b0 w
b0 v
b0 u
0t
b0 s
b0 r
b0 q
b0 p
0o
b0 n
b0 m
b0 l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
b0 `
b0 _
b0 ^
0]
0\
0[
0Z
b0 Y
b0 X
bx W
bx V
bx U
bx T
bx S
b0 R
b0 Q
b0 P
0O
b0 N
0M
b0 L
0K
0J
b0 I
1H
b0 G
0F
0E
b0 ;
0:
b0 9
08
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
0.
0-
b0 ,
b0 +
b0 *
0)
b0 (
0'
0&
b0 %
0$
0#
0"
0!
$end
#5000
b1000000001000001000000110110011 %
b1000000001000001000000110110011 M"
b1000000001000001000000110110011 *
b1000000001000001000000110110011 8"
b1000000001000001000000110110011 L"
1E
#10000
0H
0E
#15000
14"
1?"
b100 @"
16"
1'
1>"
b1000000001000001000000110110011 B"
1E
#20000
0E
#25000
1]
06"
1&"
b10000000010 m
b1000000001000001000000000000000 n
b1000010000000010 q
b110000000010 s
b10000000011 p
b10000000010 r
1t
1c
b110011 l
b11 `
b1 0
b1 X
b1 _
b10 /
b10 Y
b10 ^
1?"
b1000 @"
b100 D"
b1000000001000001000000110110011 ,
b1000000001000001000000110110011 w
b1000000001000001000000110110011 :"
b100 (
b100 ;"
1)
1E
#26000
b1011 W
b0 V
b0 U
#30000
0E
#35000
1?"
b1100 @"
b1000 D"
b100 ="
1:
b1000 (
b1000 ;"
b11110110101000000100000100010011 *
b11110110101000000100000100010011 8"
b11110110101000000100000100010011 L"
1E
#36000
b1011 W
#40000
0E
#45000
b11111111111111111111111101101010 1"
1'"
0&"
b111101101010 m
b11110110101000000100000000000000 n
b11111111111111111111111101101010 r
b11111111111111111111111101100010 p
b11111111111111111111011101100010 s
b11111111111100000100011101101010 q
1o
0c
1h
b10011 l
b100 u
b10 `
b0 0
b0 X
b0 _
b1010 /
b1010 Y
b1010 ^
1?"
b10000 @"
b1100 D"
1-
b1 5
b1 ,"
b10 ;
b10 ("
b11 3
b11 ."
b10 1
b10 0"
b1 2
b1 /"
b1000 ="
b11110110101000000100000100010011 ,
b11110110101000000100000100010011 w
b11110110101000000100000100010011 :"
b100 +
b100 v
b100 <"
b1100 (
b1100 ;"
b1000000100000011 *
b1000000100000011 8"
b1000000100000011 L"
1E
#46000
b1 V
b1011 W
b1 U
#50000
0E
#55000
b0 1"
0'"
b0 m
b1000000000000000 n
b0 r
b10 p
b10 s
b1000000000000000 q
0o
0t
0h
1e
b11 l
b0 u
b1 0
b1 X
b1 _
b0 /
b0 Y
b0 ^
1?"
b10100 @"
b10000 D"
b10 5
b10 ,"
b10000 ;
b10000 ("
b11111111111111111111111101101010 6
b11111111111111111111111101101010 +"
b100 7
b100 *"
b10 3
b10 ."
b1010 1
b1010 0"
b0 2
b0 /"
b100 4
b100 -"
b1100 ="
b1000000100000011 ,
b1000000100000011 w
b1000000100000011 :"
b1000 +
b1000 v
b1000 <"
b10000 (
b10000 ;"
b11111110001100010001111000100011 *
b11111110001100010001111000100011 8"
b11111110001100010001111000100011 L"
1E
#56000
b10000 S
b100 T
b1011 W
b1 V
b10 U
#60000
0E
#65000
b11111111111111111111111111111100 1"
b111111100011 m
b11111110001100010001000000000000 n
b11111111111111111111111111100011 r
b11111111111111111111111111111100 p
b11111111111111111111011111111100 s
b11111111111100010001111111100010 q
1o
1t
0e
1b
b100011 l
b1 u
b11100 `
b10 0
b10 X
b10 _
b11 /
b11 Y
b11 ^
1?"
b11000 @"
b10100 D"
b100 5
b100 ,"
b0 ;
b0 ("
b0 6
b0 +"
b0 7
b0 *"
b0 1
b0 0"
b1 2
b1 /"
b1000 4
b1000 -"
b10000 ="
b11111110001100010001111000100011 ,
b11111110001100010001111000100011 w
b11111110001100010001111000100011 :"
b1100 +
b1100 v
b1100 <"
b10100 (
b10100 ;"
b11111110000100010101100011100011 *
b11111110000100010101100011100011 8"
b11111110000100010101100011100011 L"
1E
#66000
b1011 W
b1 V
b100 U
#70000
0E
#75000
b11111111111111111111111111110000 1"
1{
b111111100001 m
b11111110000100010101000000000000 n
b11111111111100010101111111100000 q
b11111111111111111111111111110000 s
b11111111111111111111111111110001 p
b11111111111111111111111111100001 r
0b
1j
b1100011 l
b101 u
b10001 `
b1 /
b1 Y
b1 ^
1?"
b11100 @"
b11000 D"
b1000 5
b1000 ,"
b11111111111111111111111111111100 6
b11111111111111111111111111111100 +"
b1 7
b1 *"
b11100 3
b11100 ."
b11 1
b11 0"
b10 2
b10 /"
b1100 4
b1100 -"
b10100 ="
b11111110000100010101100011100011 ,
b11111110000100010101100011100011 w
b11111110000100010101100011100011 :"
b10000 +
b10000 v
b10000 <"
b11000 (
b11000 ;"
b1000000000000000011101111 *
b1000000000000000011101111 8"
b1000000000000000011101111 L"
1E
#76000
b1011 W
b1 V
b1000 U
#80000
0E
#85000
b10000 1"
0{
b10000 m
b1000000000000000000000000 n
b10000 r
b1 p
b100000000000 s
b10000 q
0o
0t
0j
1g
b1101111 l
b0 u
b1 `
b0 0
b0 X
b0 _
b10000 /
b10000 Y
b10000 ^
1?"
b100000 @"
b11100 D"
b10000 5
b10000 ,"
b1000000000000 ;
b1000000000000 ("
b11111111111111111111111111110000 6
b11111111111111111111111111110000 +"
b101 7
b101 *"
b10001 3
b10001 ."
b1 1
b1 0"
b10000 4
b10000 -"
b11000 ="
b1000000000000000011101111 ,
b1000000000000000011101111 w
b1000000000000000011101111 :"
b10100 +
b10100 v
b10100 <"
b11100 (
b11100 ;"
b1100000001000000111100111 *
b1100000001000000111100111 8"
b1100000001000000111100111 L"
1E
#86000
b1011 W
b1 V
b10000 U
#90000
0E
#95000
b11000 1"
b11000 m
b1100000001000000000000000 n
b1000000000011000 q
b100000000010 s
b11 p
b11000 r
0g
1f
b1100111 l
b11 `
b1 0
b1 X
b1 _
b11000 /
b11000 Y
b11000 ^
1?"
b100100 @"
b100000 D"
b100000 5
b100000 ,"
b0 ;
b0 ("
b10000 6
b10000 +"
b0 7
b0 *"
b1 3
b1 ."
b10000 1
b10000 0"
b0 2
b0 /"
b10100 4
b10100 -"
b11100 ="
b1100000001000000111100111 ,
b1100000001000000111100111 w
b1100000001000000111100111 :"
b11000 +
b11000 v
b11000 <"
b100000 (
b100000 ;"
b10101011110011011110000010010111 *
b10101011110011011110000010010111 8"
b10101011110011011110000010010111 L"
1E
#96000
b1011 W
b1 V
b100000 U
#100000
0E
#105000
b10101011110011011110000000000000 1"
b101010111100 m
b10101011110011011110000000000000 n
b11111111111111111111101010111100 r
b11111111111111111111101010100001 p
b11111111111111111111101010100000 s
b11111111111111011110001010111100 q
1o
0f
1k
b10111 l
b110 u
b1 `
b11011 0
b11011 X
b11011 _
b11100 /
b11100 Y
b11100 ^
1?"
b101000 @"
b100100 D"
b1000000 5
b1000000 ,"
b11000 6
b11000 +"
b11 3
b11 ."
b11000 1
b11000 0"
b1 2
b1 /"
b11000 4
b11000 -"
b100000 ="
b10101011110011011110000010010111 ,
b10101011110011011110000010010111 w
b10101011110011011110000010010111 :"
b11100 +
b11100 v
b11100 <"
b100100 (
b100100 ;"
b110000010101010110010001110011 *
b110000010101010110010001110011 8"
b110000010101010110010001110011 L"
1E
#106000
b1011 W
b1 V
b1000000 U
#110000
0E
#115000
b1100000101 1"
b1100000101 m
b110000010101010110000000000000 n
b1100000101 r
b1100001000 p
b1100001000 s
b1010110101100000100 q
0o
0k
1a
b1110011 l
b1000 `
b1010 0
b1010 X
b1010 _
b101 /
b101 Y
b101 ^
1?"
b101100 @"
b101000 D"
b100000000 5
b100000000 ,"
b10101011110011011110000000000000 6
b10101011110011011110000000000000 +"
b110 7
b110 *"
b1 3
b1 ."
b11100 1
b11100 0"
b11011 2
b11011 /"
b11100 4
b11100 -"
b100100 ="
b110000010101010110010001110011 ,
b110000010101010110010001110011 w
b110000010101010110010001110011 :"
b100000 +
b100000 v
b100000 <"
b101000 (
b101000 ;"
b1111111100000000000000001111 *
b1111111100000000000000001111 8"
b1111111100000000000000001111 L"
1E
#116000
b1011 W
b1 V
b100000000 U
#120000
0E
#125000
b11111111 1"
b11111111 m
b1111111100000000000000000000 n
b100011111110 q
b11100000 s
b11100000 p
b11111111 r
0a
1i
b1111 l
b0 u
b0 `
b0 0
b0 X
b0 _
b11111 /
b11111 Y
b11111 ^
1?"
b110000 @"
b101100 D"
b1000000000 5
b1000000000 ,"
b1100000101 6
b1100000101 +"
b1000 3
b1000 ."
b101 1
b101 0"
b1010 2
b1010 /"
b100000 4
b100000 -"
b101000 ="
b1111111100000000000000001111 ,
b1111111100000000000000001111 w
b1111111100000000000000001111 :"
b100100 +
b100100 v
b100100 <"
b101100 (
b101100 ;"
b0 *
b0 8"
b0 L"
1E
#126000
b1011 W
b1 V
b1000000000 U
#130000
13"
12"
0?"
b11000 @"
b11000 G
b11000 5"
1F
0E
#135000
04"
0]
b0 1"
16"
b0 m
b0 n
b0 q
b0 s
b0 p
b0 r
0i
b0 l
b0 /
b0 Y
b0 ^
b11000 @"
b11000 D"
b10000000000 5
b10000000000 ,"
b11111111 6
b11111111 +"
b0 7
b0 *"
b0 3
b0 ."
b11111 1
b11111 0"
b0 2
b0 /"
b100100 4
b100100 -"
0'
0>"
b101100 ="
0:
b0 ,
b0 w
b0 :"
b101000 +
b101000 v
b101000 <"
b11000 (
b11000 ;"
1E
#137000
03"
02"
b11100 @"
0F
#140000
0E
#145000
14"
1?"
b11100 @"
16"
0-
b11000 ="
b0 B"
b101100 C"
1'
1>"
b1100000001000000111100111 *
b1100000001000000111100111 8"
b1100000001000000111100111 L"
0)
1E
#146000
b1011 W
b1 V
b10000000000 U
#150000
0E
#155000
1]
06"
b11000 1"
b11000 m
b1100000001000000000000000 n
b1000000000011000 q
b100000000010 s
b11 p
b11000 r
1f
b1100111 l
b11 `
b1 0
b1 X
b1 _
b11000 /
b11000 Y
b11000 ^
1?"
b100000 @"
b11100 D"
b1100000001000000111100111 B"
b11000 C"
b1100000001000000111100111 ,
b1100000001000000111100111 w
b1100000001000000111100111 :"
b11000 +
b11000 v
b11000 <"
b11100 (
b11100 ;"
1)
1E
#156000
b1011 W
b1 V
#160000
0E
#165000
1?"
b100100 @"
b100000 D"
b11100 ="
1:
b100000 (
b100000 ;"
b10101011110011011110000010010111 *
b10101011110011011110000010010111 8"
b10101011110011011110000010010111 L"
1E
#166000
b1011 W
b1 V
#170000
0E
#175000
b10101011110011011110000000000000 1"
b101010111100 m
b10101011110011011110000000000000 n
b11111111111111111111101010111100 r
b11111111111111111111101010100001 p
b11111111111111111111101010100000 s
b11111111111111011110001010111100 q
1o
0f
1k
b10111 l
b110 u
b1 `
b11011 0
b11011 X
b11011 _
b11100 /
b11100 Y
b11100 ^
1?"
b101000 @"
b100100 D"
1-
b1000000 5
b1000000 ,"
b11000 6
b11000 +"
b11 3
b11 ."
b11000 1
b11000 0"
b1 2
b1 /"
b11000 4
b11000 -"
b100000 ="
b10101011110011011110000010010111 ,
b10101011110011011110000010010111 w
b10101011110011011110000010010111 :"
b11100 +
b11100 v
b11100 <"
b100100 (
b100100 ;"
b110000010101010110010001110011 *
b110000010101010110010001110011 8"
b110000010101010110010001110011 L"
1E
#176000
b1011 W
b1 V
b1000000 U
#180000
0E
#185000
b1100000101 1"
b1100000101 m
b110000010101010110000000000000 n
b1100000101 r
b1100001000 p
b1100001000 s
b1010110101100000100 q
0o
0k
1a
b1110011 l
b1000 `
b1010 0
b1010 X
b1010 _
b101 /
b101 Y
b101 ^
1?"
b101100 @"
b101000 D"
b100000000 5
b100000000 ,"
b10101011110011011110000000000000 6
b10101011110011011110000000000000 +"
b110 7
b110 *"
b1 3
b1 ."
b11100 1
b11100 0"
b11011 2
b11011 /"
b11100 4
b11100 -"
b100100 ="
b110000010101010110010001110011 ,
b110000010101010110010001110011 w
b110000010101010110010001110011 :"
b100000 +
b100000 v
b100000 <"
b101000 (
b101000 ;"
b1111111100000000000000001111 *
b1111111100000000000000001111 8"
b1111111100000000000000001111 L"
1E
#186000
b1011 W
b1 V
b100000000 U
#190000
0E
#195000
b11111111 1"
b11111111 m
b1111111100000000000000000000 n
b100011111110 q
b11100000 s
b11100000 p
b11111111 r
0a
1i
b1111 l
b0 u
b0 `
b0 0
b0 X
b0 _
b11111 /
b11111 Y
b11111 ^
1?"
b110000 @"
b101100 D"
b1000000000 5
b1000000000 ,"
b1100000101 6
b1100000101 +"
b1000 3
b1000 ."
b101 1
b101 0"
b1010 2
b1010 /"
b100000 4
b100000 -"
b101000 ="
b1111111100000000000000001111 ,
b1111111100000000000000001111 w
b1111111100000000000000001111 :"
b100100 +
b100100 v
b100100 <"
b101100 (
b101100 ;"
b0 *
b0 8"
b0 L"
1E
#196000
b1011 W
b1 V
b1000000000 U
#200000
0E
#205000
0]
b0 1"
b0 m
b0 n
b0 q
b0 s
b0 p
b0 r
0i
b0 l
b0 /
b0 Y
b0 ^
1?"
b110100 @"
b110000 D"
b10000000000 5
b10000000000 ,"
b11111111 6
b11111111 +"
b0 7
b0 *"
b0 3
b0 ."
b11111 1
b11111 0"
b0 2
b0 /"
b100100 4
b100100 -"
b101100 ="
b0 ,
b0 w
b0 :"
b101000 +
b101000 v
b101000 <"
b110000 (
b110000 ;"
1E
#206000
b1011 W
b1 V
b10000000000 U
#210000
0E
#215000
1?"
b111000 @"
b110100 D"
b1 9
b1 )"
b0 5
b0 ,"
b0 6
b0 +"
b0 1
b0 0"
b101000 4
b101000 -"
b110000 ="
b101100 +
b101100 v
b101100 <"
b110100 (
b110100 ;"
1E
#216000
b1011 W
b0 V
b0 U
#220000
0E
#225000
1?"
b111100 @"
b111000 D"
b101100 4
b101100 -"
b110100 ="
b110000 +
b110000 v
b110000 <"
b111000 (
b111000 ;"
1E
#226000
b1011 W
#230000
0E
#235000
1?"
b1000000 @"
b111100 D"
b110000 4
b110000 -"
b111000 ="
b110100 +
b110100 v
b110100 <"
b111100 (
b111100 ;"
1E
#236000
b1011 W
#240000
0E
#245000
1?"
b1000100 @"
b1000000 D"
b110100 4
b110100 -"
b111100 ="
b111000 +
b111000 v
b111000 <"
b1000000 (
b1000000 ;"
1E
#246000
b1011 W
#250000
13"
12"
0?"
b10000 @"
b10000 P
b10000 7"
1O
0E
#255000
16"
b10000 @"
b10000 D"
b111000 4
b111000 -"
0'
0>"
b1000000 ="
0:
b111100 +
b111100 v
b111100 <"
b10000 (
b10000 ;"
1E
#257000
03"
02"
04"
b10100 @"
0O
#260000
0E
#265000
14"
1?"
b10100 @"
16"
0-
b10000 ="
b0 B"
b1000000 C"
1'
1>"
b11111110000100010101100011100011 *
b11111110000100010101100011100011 8"
b11111110000100010101100011100011 L"
0)
1E
#266000
b1011 W
#270000
0E
#275000
1]
06"
b11111111111111111111111111110000 1"
1{
b111111100001 m
b11111110000100010101000000000000 n
b11111111111111111111111111100001 r
b11111111111111111111111111110001 p
b11111111111111111111111111110000 s
b11111111111100010101111111100000 q
1o
1t
1j
b1100011 l
b101 u
b10001 `
b10 0
b10 X
b10 _
b1 /
b1 Y
b1 ^
1?"
b11000 @"
b10100 D"
b11111110000100010101100011100011 B"
b10000 C"
b11111110000100010101100011100011 ,
b11111110000100010101100011100011 w
b11111110000100010101100011100011 :"
b10000 +
b10000 v
b10000 <"
b10100 (
b10100 ;"
1)
1E
#276000
b1011 W
#280000
0E
#285000
1?"
b11100 @"
b11000 D"
b10100 ="
1:
b11000 (
b11000 ;"
b1000000000000000011101111 *
b1000000000000000011101111 8"
b1000000000000000011101111 L"
1E
#286000
b1011 W
#290000
0E
#295000
b10000 1"
0{
b10000 m
b1000000000000000000000000 n
b10000 r
b1 p
b100000000000 s
b10000 q
0o
0t
0j
1g
b1101111 l
b0 u
b1 `
b0 0
b0 X
b0 _
b10000 /
b10000 Y
b10000 ^
1?"
b100000 @"
b11100 D"
1-
b0 9
b0 )"
b10000 5
b10000 ,"
b1000000000000 ;
b1000000000000 ("
b11111111111111111111111111110000 6
b11111111111111111111111111110000 +"
b101 7
b101 *"
b10001 3
b10001 ."
b1 1
b1 0"
b10 2
b10 /"
b10000 4
b10000 -"
b11000 ="
b1000000000000000011101111 ,
b1000000000000000011101111 w
b1000000000000000011101111 :"
b10100 +
b10100 v
b10100 <"
b11100 (
b11100 ;"
b1100000001000000111100111 *
b1100000001000000111100111 8"
b1100000001000000111100111 L"
1E
#296000
b1 V
b1011 W
b10000 U
#300000
0E
#305000
b11000 1"
b11000 m
b1100000001000000000000000 n
b1000000000011000 q
b100000000010 s
b11 p
b11000 r
0g
1f
b1100111 l
b11 `
b1 0
b1 X
b1 _
b11000 /
b11000 Y
b11000 ^
1?"
b100100 @"
b100000 D"
b100000 5
b100000 ,"
b0 ;
b0 ("
b10000 6
b10000 +"
b0 7
b0 *"
b1 3
b1 ."
b10000 1
b10000 0"
b0 2
b0 /"
b10100 4
b10100 -"
b11100 ="
b1100000001000000111100111 ,
b1100000001000000111100111 w
b1100000001000000111100111 :"
b11000 +
b11000 v
b11000 <"
b100000 (
b100000 ;"
b10101011110011011110000010010111 *
b10101011110011011110000010010111 8"
b10101011110011011110000010010111 L"
1E
#306000
b1011 W
b1 V
b100000 U
#310000
0E
#315000
b10101011110011011110000000000000 1"
b101010111100 m
b10101011110011011110000000000000 n
b11111111111111111111101010111100 r
b11111111111111111111101010100001 p
b11111111111111111111101010100000 s
b11111111111111011110001010111100 q
1o
0f
1k
b10111 l
b110 u
b1 `
b11011 0
b11011 X
b11011 _
b11100 /
b11100 Y
b11100 ^
1?"
b101000 @"
b100100 D"
b1000000 5
b1000000 ,"
b11000 6
b11000 +"
b11 3
b11 ."
b11000 1
b11000 0"
b1 2
b1 /"
b11000 4
b11000 -"
b100000 ="
b10101011110011011110000010010111 ,
b10101011110011011110000010010111 w
b10101011110011011110000010010111 :"
b11100 +
b11100 v
b11100 <"
b100100 (
b100100 ;"
b110000010101010110010001110011 *
b110000010101010110010001110011 8"
b110000010101010110010001110011 L"
1E
#316000
b1011 W
b1 V
b1000000 U
#320000
0E
#325000
b1100000101 1"
b1100000101 m
b110000010101010110000000000000 n
b1100000101 r
b1100001000 p
b1100001000 s
b1010110101100000100 q
0o
0k
1a
b1110011 l
b1000 `
b1010 0
b1010 X
b1010 _
b101 /
b101 Y
b101 ^
1?"
b101100 @"
b101000 D"
b100000000 5
b100000000 ,"
b10101011110011011110000000000000 6
b10101011110011011110000000000000 +"
b110 7
b110 *"
b1 3
b1 ."
b11100 1
b11100 0"
b11011 2
b11011 /"
b11100 4
b11100 -"
b100100 ="
b110000010101010110010001110011 ,
b110000010101010110010001110011 w
b110000010101010110010001110011 :"
b100000 +
b100000 v
b100000 <"
b101000 (
b101000 ;"
b1111111100000000000000001111 *
b1111111100000000000000001111 8"
b1111111100000000000000001111 L"
1E
#326000
b1011 W
b1 V
b100000000 U
#330000
0E
#335000
b11111111 1"
b11111111 m
b1111111100000000000000000000 n
b100011111110 q
b11100000 s
b11100000 p
b11111111 r
0a
1i
b1111 l
b0 u
b0 `
b0 0
b0 X
b0 _
b11111 /
b11111 Y
b11111 ^
1?"
b110000 @"
b101100 D"
b1000000000 5
b1000000000 ,"
b1100000101 6
b1100000101 +"
b1000 3
b1000 ."
b101 1
b101 0"
b1010 2
b1010 /"
b100000 4
b100000 -"
b101000 ="
b1111111100000000000000001111 ,
b1111111100000000000000001111 w
b1111111100000000000000001111 :"
b100100 +
b100100 v
b100100 <"
b101100 (
b101100 ;"
b0 *
b0 8"
b0 L"
1E
#336000
b1011 W
b1 V
b1000000000 U
#340000
0E
#345000
0]
b0 1"
b0 m
b0 n
b0 q
b0 s
b0 p
b0 r
0i
b0 l
b0 /
b0 Y
b0 ^
1?"
b110100 @"
b110000 D"
b10000000000 5
b10000000000 ,"
b11111111 6
b11111111 +"
b0 7
b0 *"
b0 3
b0 ."
b11111 1
b11111 0"
b0 2
b0 /"
b100100 4
b100100 -"
b101100 ="
b0 ,
b0 w
b0 :"
b101000 +
b101000 v
b101000 <"
b110000 (
b110000 ;"
1E
#346000
b1011 W
b1 V
b10000000000 U
#350000
0E
#355000
1?"
b111000 @"
b110100 D"
b1 9
b1 )"
b0 5
b0 ,"
b0 6
b0 +"
b0 1
b0 0"
b101000 4
b101000 -"
b110000 ="
b101100 +
b101100 v
b101100 <"
b110100 (
b110100 ;"
1E
#356000
b1011 W
b0 V
b0 U
#360000
0E
#365000
1?"
b111100 @"
b111000 D"
b101100 4
b101100 -"
b110100 ="
b110000 +
b110000 v
b110000 <"
b111000 (
b111000 ;"
1E
#366000
b1011 W
